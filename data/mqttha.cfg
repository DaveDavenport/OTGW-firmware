// Configuration topic no1: homeassistant/sensor/<name node>/config
// Configuration Payload no1:  {"unique_id": "otgw", "name": "flame", "state_topic": "OTGW/flame"}
homeassistant/binary_sensor/OTGW/fault/config , {"unique_id": "otgw","name": "Fault", "state_topic": "OTGW/fault"}
homeassistant/binary_sensor/OTGW/centralheating/config , {"name": "Central Heating", "state_topic": "OTGW/centralheating"}
homeassistant/binary_sensor/OTGW/domestichotwater/config , {"name": "Domestic Hot Water", "state_topic": "OTGW/domestichotwater"}
homeassistant/binary_sensor/OTGW/flame/config , {"name": "Flame", "state_topic": "OTGW/flame"}
homeassistant/binary_sensor/OTGW/cooling/config , {"name": "Cooling", "state_topic": "OTGW/cooling"}
homeassistant/binary_sensor/OTGW/centralheating2/config , {"name": "Central Heating 2", "state_topic": "OTGW/centralheating2"}
homeassistant/binary_sensor/OTGW/diagnostic_indicator/config , {"name": "Diagonostic Indicator", "state_topic": "OTGW/diagnostic_indicator"}

homeassistant/binary_sensor/OTGW/ch_enable/config , {"name": "Central Heating enable", "state_topic": "OTGW/ch_enable"}
homeassistant/binary_sensor/OTGW/dhw_enable/config , {"name": "Domestic Hot Water enable", "state_topic": "OTGW/dhw_enable"}
homeassistant/binary_sensor/OTGW/cooling_enable/config , {"name": "Cooling enable", "state_topic": "OTGW/cooling_enable"}
homeassistant/binary_sensor/OTGW/otc_active/config , {"name": "OTC enable", "state_topic": "OTGW/otc_active"}
homeassistant/binary_sensor/OTGW/ch2_enable/config , {"name": "central heating 2 enable", "state_topic": "OTGW/ch2_enable"}

homeassistant/binary_sensor/OTGW/service_request/config , {"name": "Service request", "state_topic": "OTGW/service_request"}
homeassistant/binary_sensor/OTGW/lockout_reset/config , {"name": "Lockout-reset", "state_topic": "OTGW/lockout_reset"}
homeassistant/binary_sensor/OTGW/low_water_pressure/config , {"name": "Low water press", "state_topic": "OTGW/low_water_pressure"}
homeassistant/binary_sensor/OTGW/gas_flame_fault/config , {"name": "Gas/flame fault", "state_topic": "OTGW/gas_flame_fault"}
homeassistant/binary_sensor/OTGW/air_pressure_fault/config , {"name": "Air press fault", "state_topic": "OTGW/air_pressure_fault"}
homeassistant/binary_sensor/OTGW/water_over-temperature/config , {"name": "Water over-temp", "state_topic": "OTGW/water_over-temperature"}

homeassistant/binary_sensor/OTGW/dhw_present/config , {"name": "DHW present", "state_topic": "OTGW/dhw_present"}
homeassistant/binary_sensor/OTGW/control_type/config , {"name": "Control type", "state_topic": "OTGW/control_type"}
homeassistant/binary_sensor/OTGW/cooling_config/config , {"name": " Cooling configs", "state_topic": "OTGW/cooling_config"}
homeassistant/binary_sensor/OTGW/dhw_config/config , {"name": "DHW config", "state_topic": "OTGW/dhw_config"}
homeassistant/binary_sensor/OTGW/master_low_off_pomp_control_function/config , {"name": "Master low-off&pump control function", "state_topic": "OTGW/master_low_off_pomp_control_function"}
homeassistant/binary_sensor/OTGW/ch2_present/config , {"name": "CH2 present", "state_topic": "OTGW/ch2_present"}

// Configuration topic no2: homeassistant/sensor/<name node>/config
// Configuration payload no1: {"device_class": "temperature", "name": "Temperature", "state_topic": "OTGW/<sensor name>>", "unit_of_measurement": "°C", "value_template": "{{ value_json.temperature}}" }
homeassistant/sensor/OTGW/TSet/config , {"device_class": "temperature", "name": "Control setpoint", "state_topic": "OTGW/TSet", "unit_of_measurement": "°C", "value_template": "{{ value }}" }
homeassistant/sensor/OTGW/TsetCH2/config , {"device_class": "temperature", "name": "Control setpoint for 2e circuit", "state_topic": "OTGW/TsetCH2", "unit_of_measurement": "°C", "value_template": "{{ value }}" }
homeassistant/sensor/OTGW/TrOverride/config , {"device_class": "temperature", "name": "Remote override room setpoint", "state_topic": "OTGW/TrOverride", "unit_of_measurement": "°C", "value_template": "{{ value }}" }
homeassistant/sensor/OTGW/TrSet/config , {"device_class": "temperature", "name": "Room setpoint", "state_topic": "OTGW/TrSet", "unit_of_measurement": "°C", "value_template": "{{ value }}" }
homeassistant/sensor/OTGW/Troom/config , {"device_class": "temperature", "name": "Room Temperature", "state_topic": "OTGW/Troom", "unit_of_measurement": "°C", "value_template": "{{ value }}" }
homeassistant/sensor/OTGW/Tboiler/config , {"device_class": "temperature", "name": "Boiler flow water temperature", "state_topic": "OTGW/Tboiler", "unit_of_measurement": "°C", "value_template": "{{ value }}" }
homeassistant/sensor/OTGW/Tdhw/config , {"device_class": "temperature", "name": "DHW temperature", "state_topic": "OTGW/Tdhw", "unit_of_measurement": "°C", "value_template": "{{ value }}" }
homeassistant/sensor/OTGW/Toutside/config , {"device_class": "temperature", "name": "Outside Temperature", "state_topic": "OTGW/Toutside", "unit_of_measurement": "°C", "value_template": "{{ value }}" }
homeassistant/sensor/OTGW/Tret/config , {"device_class": "temperature", "name": "Return water temperature", "state_topic": "OTGW/Tret", "unit_of_measurement": "°C", "value_template": "{{ value }}" }
homeassistant/sensor/OTGW/Tstorage/config , {"device_class": "temperature", "name": "Solar storage temperature", "state_topic": "OTGW/Tstorage", "unit_of_measurement": "°C", "value_template": "{{ value }}" }
homeassistant/sensor/OTGW/Tcollector/config , {"device_class": "temperature", "name": "Solar collector temperature", "state_topic": "OTGW/Tcollector", "unit_of_measurement": "°C", "value_template": "{{ value }}" }
homeassistant/sensor/OTGW/TflowCH2/config , {"device_class": "temperature", "name": "Flow water temperature CH2 cir.", "state_topic": "OTGW/TflowCH2", "unit_of_measurement": "°C", "value_template": "{{ value }}" }
homeassistant/sensor/OTGW/Tdhw2/config , {"device_class": "temperature", "name": "Domestic hot water temperature 2", "state_topic": "OTGW/Tdhw2", "unit_of_measurement": "°C", "value_template": "{{ value }}" }
homeassistant/sensor/OTGW/Texhaust/config , {"device_class": "temperature", "name": "Boiler exhaust temperature", "state_topic": "OTGW/Texhaust", "unit_of_measurement": "°C", "value_template": "{{ value }}" }
homeassistant/sensor/OTGW/TdhwSet/config , {"device_class": "temperature", "name": "DHW setpoint", "state_topic": "OTGW/TdhwSet", "unit_of_measurement": "°C", "value_template": "{{ value }}" }
homeassistant/sensor/OTGW/MaxTSet/config , {"device_class": "temperature", "name": "Max CH water setpoint", "state_topic": "OTGW/MaxTSet", "unit_of_measurement": "°C", "value_template": "{{ value }}" }
homeassistant/sensor/OTGW/CoolingControl/config , {"name": "Cooling control signal", "state_topic": "OTGW/CoolingControl", "unit_of_measurement": "%", "value_template": "{{ value }}" }
homeassistant/sensor/OTGW/MaxRelModLevelSetting/config , {"name": "Max Rel Modulation level setting", "state_topic": "OTGW/MaxRelModLevelSetting", "unit_of_measurement": "%", "value_template": "{{ value }}" }
homeassistant/sensor/OTGW/RelModLevel/config , {"name": "Relative Modulation Level", "state_topic": "OTGW/RelModLevel", "unit_of_measurement": "%", "value_template": "{{ value }}" }
homeassistant/sensor/OTGW/CHPressure/config , {"name": "Water pressure in CH circuit", "state_topic": "OTGW/CHPressure", "unit_of_measurement": "bar", "value_template": "{{ value }}" }
homeassistant/sensor/OTGW/DHWFlowRate/config , {"name": "Water flow rate in DHW circuit", "state_topic": "OTGW/DHWFlowRate", "unit_of_measurement": "l/min", "value_template": "{{ value }}" }
homeassistant/sensor/OTGW/Hcratio/config , {"device_class": "temperature", "name": "OTC heat curve ratio", "state_topic": "OTGW/DHWFlowRate", "unit_of_measurement": "°C", "value_template": "{{ value }}" }
homeassistant/sensor/OTGW/OpenThermVersionMaster/config , {"name": "Master OT protocol version", "state_topic": "OTGW/OpenThermVersionMaster", "unit_of_measurement": "l/min", "value_template": "{{ value }}" }
homeassistant/sensor/OTGW/OpenThermVersionSlave/config , {"name": "Slave OT protocol version", "state_topic": "OTGW/OpenThermVersionSlave", "unit_of_measurement": "l/min", "value_template": "{{ value }}" }
//Statistics
homeassistant/sensor/OTGW/BurnerStarts/config , {"name": "Nr of starts burner", "state_topic": "OTGW/BurnerStarts", "unit_of_measurement": "", "value_template": "{{ value }}" }
homeassistant/sensor/OTGW/CHPumpStarts/config , {"name": "Nr of starts CH pump", "state_topic": "OTGW/CHPumpStarts", "unit_of_measurement": "", "value_template": "{{ value }}" }
homeassistant/sensor/OTGW/DHWPumpValveStarts/config , {"name": "Nr of starts DHW pump/valve", "state_topic": "OTGW/DHWPumpValveStarts", "unit_of_measurement": "", "value_template": "{{ value }}" }
homeassistant/sensor/OTGW/DHWBurnerStarts/config , {"name": "Nr of starts burner during DHW", "state_topic": "OTGW/DHWBurnerStarts", "unit_of_measurement": "", "value_template": "{{ value }}" }
homeassistant/sensor/OTGW/BurnerOperationHours/config , {"name": "Nr of hours burner operation", "state_topic": "OTGW/BurnerOperationHours", "unit_of_measurement": "", "value_template": "{{ value }}" }
homeassistant/sensor/OTGW/CHPumpOperationHours/config , {"name": "Nr of hours CH pump running", "state_topic": "OTGW/CHPumpOperationHours", "unit_of_measurement": "", "value_template": "{{ value }}" }
homeassistant/sensor/OTGW/DHWPumpValveOperationHours/config , {"name": "Nr of hours DHW valve open", "state_topic": "OTGW/DHWPumpValveOperationHours", "unit_of_measurement": "", "value_template": "{{ value }}" }
homeassistant/sensor/OTGW/DHWBurnerOperationHours/config , {"name": "Nr of hours burner operation DHW", "state_topic": "OTGW/DHWBurnerOperationHours", "unit_of_measurement": "", "value_template": "{{ value }}" }

homeassistant/sensor/OTGW/status_master/config , {"name": "Status", "state_topic": "OTGW/status_master", "unit_of_measurement": "", "value_template": "{{ value }}" }
homeassistant/sensor/OTGW/status_slave/config , {"name": "Status", "state_topic": "OTGW/status_slave", "unit_of_measurement": "", "value_template": "{{ value }}" }

homeassistant/sensor/OTGW/ASF_flags/config , {"name": "Application Specific Fault", "state_topic": "OTGW/ASF_flags", "unit_of_measurement": "", "value_template": "{{ value }}" }
homeassistant/sensor/OTGW/ASF_oemfaultcode/config , {"name": "ASF OEM fault code", "state_topic": "OTGW/ASF_oemfaultcode", "unit_of_measurement": "", "value_template": "{{ value }}" }
 
homeassistant/sensor/OTGW/master_configuration/config , {"name": "Status", "state_topic": "OTGW/master_configuration", "unit_of_measurement": "", "value_template": "{{ value }}" }
homeassistant/sensor/OTGW/master_memberid_code/config , {"name": "Status", "state_topic": "OTGW/master_memberid_code", "unit_of_measurement": "", "value_template": "{{ value }}" }
homeassistant/sensor/OTGW/slave_configuration/config , {"name": "Status", "state_topic": "OTGW/slave_configuration", "unit_of_measurement": "", "value_template": "{{ value }}" }
homeassistant/sensor/OTGW/slave_memberid_code/config , {"name": "Status", "state_topic": "OTGW/slave_configuration", "unit_of_measurement": "", "value_template": "{{ value }}" }
 
  // case MConfigMMemberIDcode:      print_flag8u8(OTdata.MConfigMMemberIDcode,              "Master Config / Member ID", ""); break; // flag8 / u8  Master Configuration Flags /  Master MemberID Code 
  // case SConfigSMemberIDcode:      print_flag8u8(OTdata.SConfigSMemberIDcode,              "Slave  Config / Member ID", ""); break; // flag8 / u8  Slave Configuration Flags /  Slave MemberID Code  
  // case Command:                   print_u8u8(OTdata.Command,                              "Command","");  break; // u8 / u8  Remote Command 
  // case RBPflags:                  print_flag8flag8(OTdata.RBPflags,                       "RBPflags", ""); break; // flag8 / flag8  Remote boiler parameter transfer-enable & read/write flags 
  // case TSP:                       print_u8u8(OTdata.TSP,                                  "Nr of Transp. Slave Parameters", ""); break; // u8 / u8  Number of Transparent-Slave-Parameters supported by slave 
  // case TSPindexTSPvalue:          print_u8u8(OTdata.TSPindexTSPvalue,                     "TSPindexTSPvalue", "");  break; // u8 / u8  Index number / Value of referred-to transparent slave parameter. 
  // case FHBsize:                   print_u8u8(OTdata.FHBsize,                              "FHBsize", "");  break;  // u8 / u8  Size of Fault-History-Buffer supported by slave 
  // case FHBindexFHBvalue:          print_u8u8(OTdata.FHBindexFHBvalue,                     "FHBindexFHBvalue", "");  break;  // u8 / u8  Index number / Value of referred-to fault-history buffer entry. 
  // case MaxCapacityMinModLevel:    print_u8u8(OTdata.MaxCapacityMinModLevel,               "MaxCapacityMinModLevel", "");  break;  // u8 / u8  Maximum boiler capacity (kW) / Minimum boiler modulation level(%) 
  // case DayTime:                   print_daytime(OTdata.DayTime,                           "Day of Week - Daytime (hour/min)", "");  break; // special / u8  Day of Week and Time of Day 
  // case Date:                      print_u8u8(OTdata.Date,                                 "Date (Month/Day)", "");  break; // u8 / u8  Calendar date 
  // case Year:                      print_u16(OTdata.Year,                                  "Year","");  break; // u16  Calendar year 
  // case TdhwSetUBTdhwSetLB:        print_s8s8(OTdata.TdhwSetUBTdhwSetLB,                   "TdhwSetUBTdhwSetLB", "°C"); break;  // s8 / s8  DHW setpoint upper & lower bounds for adjustment  (°C)
  // case MaxTSetUBMaxTSetLB:        print_s8s8(OTdata.MaxTSetUBMaxTSetLB,                   "MaxTSetUBMaxTSetLB", "°C"); break;  // s8 / s8  Max CH water setpoint upper & lower bounds for adjustment  (°C)
  // case HcratioUBHcratioLB:        print_s8s8(OTdata.HcratioUBHcratioLB,                   "HcratioUBHcratioLB", ""); break;  // s8 / s8  OTC heat curve ratio upper & lower bounds for adjustment  
  // case RemoteOverrideFunction:    print_flag8(OTdata.RemoteOverrideFunction,              "RemoteOverrideFunction", ""); break; // u8 / flag8 -  Function of manual and program changes in master and remote room setpoint. 
  // case OEMDiagnosticCode:         print_u16(OTdata.OEMDiagnosticCode,                     "OEM diagnostic/service code","");  break; // u16  OEM-specific diagnostic/service code 
  // case MasterVersion:             print_u8u8(OTdata.MasterVersion,                        "MasterVersion (version/type)","" ); break;// u8 / u8  Master product version number and type 
  // case SlaveVersion:              print_u8u8(OTdata.SlaveVersion,                         "SlaveVersion  (version/type)", ""); break;// u8 / u8  Master product version number and type 
